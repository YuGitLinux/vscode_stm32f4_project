ARM GAS  /tmp/ccRBECfh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccRBECfh.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   *
  70:Src/main.c    ****   * @retval None
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccRBECfh.s 			page 3


  88:Src/main.c    ****   SystemClock_Config();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Infinite loop */
 101:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 102:Src/main.c    ****   while (1)
 103:Src/main.c    ****   {
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END WHILE */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN 3 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   }
 110:Src/main.c    ****   /* USER CODE END 3 */
 111:Src/main.c    **** 
 112:Src/main.c    **** }
 113:Src/main.c    **** 
 114:Src/main.c    **** /**
 115:Src/main.c    ****   * @brief System Clock Configuration
 116:Src/main.c    ****   * @retval None
 117:Src/main.c    ****   */
 118:Src/main.c    **** void SystemClock_Config(void)
 119:Src/main.c    **** {
 120:Src/main.c    **** 
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 123:Src/main.c    **** 
 124:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 125:Src/main.c    ****     */
 126:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Src/main.c    **** 
 128:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 129:Src/main.c    **** 
 130:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****     */
 132:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 133:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Src/main.c    ****   {
 142:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 143:Src/main.c    ****   }
 144:Src/main.c    **** 
ARM GAS  /tmp/ccRBECfh.s 			page 4


 145:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 146:Src/main.c    ****     */
 147:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 148:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 149:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 150:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 152:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 153:Src/main.c    **** 
 154:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****     /**Configure the Systick interrupt time 
 160:Src/main.c    ****     */
 161:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Configure the Systick 
 164:Src/main.c    ****     */
 165:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 168:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 169:Src/main.c    **** }
 170:Src/main.c    **** 
 171:Src/main.c    **** /** Configure pins as 
 172:Src/main.c    ****         * Analog 
 173:Src/main.c    ****         * Input 
 174:Src/main.c    ****         * Output
 175:Src/main.c    ****         * EVENT_OUT
 176:Src/main.c    ****         * EXTI
 177:Src/main.c    **** */
 178:Src/main.c    **** static void MX_GPIO_Init(void)
 179:Src/main.c    **** {
  29              		.loc 1 179 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42              	.LBB2:
 180:Src/main.c    **** 
 181:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* GPIO Ports Clock Enable */
 184:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  43              		.loc 1 184 0
  44 0004 0024     		movs	r4, #0
  45 0006 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccRBECfh.s 			page 5


  46 0008 134B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F02002 		orr	r2, r2, #32
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 02F02002 		and	r2, r2, #32
  52 0018 0192     		str	r2, [sp, #4]
  53 001a 019A     		ldr	r2, [sp, #4]
  54              	.LBE2:
  55              	.LBB3:
 185:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  56              		.loc 1 185 0
  57 001c 0294     		str	r4, [sp, #8]
  58 001e 1A6B     		ldr	r2, [r3, #48]
  59 0020 42F08002 		orr	r2, r2, #128
  60 0024 1A63     		str	r2, [r3, #48]
  61 0026 1B6B     		ldr	r3, [r3, #48]
  62 0028 03F08003 		and	r3, r3, #128
  63 002c 0293     		str	r3, [sp, #8]
  64 002e 029B     		ldr	r3, [sp, #8]
  65              	.LBE3:
 186:Src/main.c    **** 
 187:Src/main.c    ****   /*Configure GPIO pin Output Level */
 188:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_RESET);
  66              		.loc 1 188 0
  67 0030 0A4D     		ldr	r5, .L3+4
  68 0032 2246     		mov	r2, r4
  69 0034 4FF48061 		mov	r1, #1024
  70 0038 2846     		mov	r0, r5
  71 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  72              	.LVL0:
 189:Src/main.c    **** 
 190:Src/main.c    ****   /*Configure GPIO pin : PF10 */
 191:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
  73              		.loc 1 191 0
  74 003e 4FF48063 		mov	r3, #1024
  75 0042 0393     		str	r3, [sp, #12]
 192:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  76              		.loc 1 192 0
  77 0044 0123     		movs	r3, #1
  78 0046 0493     		str	r3, [sp, #16]
 193:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  79              		.loc 1 193 0
  80 0048 0594     		str	r4, [sp, #20]
 194:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  81              		.loc 1 194 0
  82 004a 0694     		str	r4, [sp, #24]
 195:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  83              		.loc 1 195 0
  84 004c 03A9     		add	r1, sp, #12
  85 004e 2846     		mov	r0, r5
  86 0050 FFF7FEFF 		bl	HAL_GPIO_Init
  87              	.LVL1:
 196:Src/main.c    **** 
 197:Src/main.c    **** }
  88              		.loc 1 197 0
  89 0054 09B0     		add	sp, sp, #36
ARM GAS  /tmp/ccRBECfh.s 			page 6


  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 12
  92              		@ sp needed
  93 0056 30BD     		pop	{r4, r5, pc}
  94              	.L4:
  95              		.align	2
  96              	.L3:
  97 0058 00380240 		.word	1073887232
  98 005c 00140240 		.word	1073878016
  99              		.cfi_endproc
 100              	.LFE126:
 102              		.section	.text._Error_Handler,"ax",%progbits
 103              		.align	2
 104              		.global	_Error_Handler
 105              		.thumb
 106              		.thumb_func
 108              	_Error_Handler:
 109              	.LFB127:
 198:Src/main.c    **** 
 199:Src/main.c    **** /* USER CODE BEGIN 4 */
 200:Src/main.c    **** 
 201:Src/main.c    **** /* USER CODE END 4 */
 202:Src/main.c    **** 
 203:Src/main.c    **** /**
 204:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 205:Src/main.c    ****   * @param  file: The file name as string.
 206:Src/main.c    ****   * @param  line: The line in file as a number.
 207:Src/main.c    ****   * @retval None
 208:Src/main.c    ****   */
 209:Src/main.c    **** void _Error_Handler(char *file, int line)
 210:Src/main.c    **** {
 110              		.loc 1 210 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL2:
 117              	.L6:
 118 0000 FEE7     		b	.L6
 119              		.cfi_endproc
 120              	.LFE127:
 122 0002 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 123              		.align	2
 124              		.global	SystemClock_Config
 125              		.thumb
 126              		.thumb_func
 128              	SystemClock_Config:
 129              	.LFB125:
 119:Src/main.c    **** 
 130              		.loc 1 119 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 80
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 119:Src/main.c    **** 
 134              		.loc 1 119 0
 135 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccRBECfh.s 			page 7


 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 14, -4
 139 0002 95B0     		sub	sp, sp, #84
 140              	.LCFI4:
 141              		.cfi_def_cfa_offset 88
 142              	.LBB4:
 126:Src/main.c    **** 
 143              		.loc 1 126 0
 144 0004 0021     		movs	r1, #0
 145 0006 0191     		str	r1, [sp, #4]
 146 0008 2B4B     		ldr	r3, .L11
 147 000a 1A6C     		ldr	r2, [r3, #64]
 148 000c 42F08052 		orr	r2, r2, #268435456
 149 0010 1A64     		str	r2, [r3, #64]
 150 0012 1B6C     		ldr	r3, [r3, #64]
 151 0014 03F08053 		and	r3, r3, #268435456
 152 0018 0193     		str	r3, [sp, #4]
 153 001a 019B     		ldr	r3, [sp, #4]
 154              	.LBE4:
 155              	.LBB5:
 128:Src/main.c    **** 
 156              		.loc 1 128 0
 157 001c 0291     		str	r1, [sp, #8]
 158 001e 274B     		ldr	r3, .L11+4
 159 0020 1A68     		ldr	r2, [r3]
 160 0022 42F48042 		orr	r2, r2, #16384
 161 0026 1A60     		str	r2, [r3]
 162 0028 1B68     		ldr	r3, [r3]
 163 002a 03F48043 		and	r3, r3, #16384
 164 002e 0293     		str	r3, [sp, #8]
 165 0030 029B     		ldr	r3, [sp, #8]
 166              	.LBE5:
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 167              		.loc 1 132 0
 168 0032 0123     		movs	r3, #1
 169 0034 0893     		str	r3, [sp, #32]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 170              		.loc 1 133 0
 171 0036 4FF48033 		mov	r3, #65536
 172 003a 0993     		str	r3, [sp, #36]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 173              		.loc 1 134 0
 174 003c 0223     		movs	r3, #2
 175 003e 0E93     		str	r3, [sp, #56]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 176              		.loc 1 135 0
 177 0040 4FF48002 		mov	r2, #4194304
 178 0044 0F92     		str	r2, [sp, #60]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 179              		.loc 1 136 0
 180 0046 1922     		movs	r2, #25
 181 0048 1092     		str	r2, [sp, #64]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 182              		.loc 1 137 0
 183 004a 4FF4A872 		mov	r2, #336
 184 004e 1192     		str	r2, [sp, #68]
ARM GAS  /tmp/ccRBECfh.s 			page 8


 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 185              		.loc 1 138 0
 186 0050 1293     		str	r3, [sp, #72]
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187              		.loc 1 139 0
 188 0052 0423     		movs	r3, #4
 189 0054 1393     		str	r3, [sp, #76]
 140:Src/main.c    ****   {
 190              		.loc 1 140 0
 191 0056 08A8     		add	r0, sp, #32
 192 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 193              	.LVL3:
 194 005c 18B1     		cbz	r0, .L8
 142:Src/main.c    ****   }
 195              		.loc 1 142 0
 196 005e 8E21     		movs	r1, #142
 197 0060 1748     		ldr	r0, .L11+8
 198 0062 FFF7FEFF 		bl	_Error_Handler
 199              	.LVL4:
 200              	.L8:
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201              		.loc 1 147 0
 202 0066 0F23     		movs	r3, #15
 203 0068 0393     		str	r3, [sp, #12]
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204              		.loc 1 149 0
 205 006a 0223     		movs	r3, #2
 206 006c 0493     		str	r3, [sp, #16]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 207              		.loc 1 150 0
 208 006e 0023     		movs	r3, #0
 209 0070 0593     		str	r3, [sp, #20]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 210              		.loc 1 151 0
 211 0072 4FF4A053 		mov	r3, #5120
 212 0076 0693     		str	r3, [sp, #24]
 152:Src/main.c    **** 
 213              		.loc 1 152 0
 214 0078 4FF48053 		mov	r3, #4096
 215 007c 0793     		str	r3, [sp, #28]
 154:Src/main.c    ****   {
 216              		.loc 1 154 0
 217 007e 0521     		movs	r1, #5
 218 0080 03A8     		add	r0, sp, #12
 219 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 220              	.LVL5:
 221 0086 18B1     		cbz	r0, .L9
 156:Src/main.c    ****   }
 222              		.loc 1 156 0
 223 0088 9C21     		movs	r1, #156
 224 008a 0D48     		ldr	r0, .L11+8
 225 008c FFF7FEFF 		bl	_Error_Handler
 226              	.LVL6:
 227              	.L9:
 161:Src/main.c    **** 
 228              		.loc 1 161 0
 229 0090 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccRBECfh.s 			page 9


 230              	.LVL7:
 231 0094 0B4B     		ldr	r3, .L11+12
 232 0096 A3FB0030 		umull	r3, r0, r3, r0
 233 009a 8009     		lsrs	r0, r0, #6
 234 009c FFF7FEFF 		bl	HAL_SYSTICK_Config
 235              	.LVL8:
 165:Src/main.c    **** 
 236              		.loc 1 165 0
 237 00a0 0420     		movs	r0, #4
 238 00a2 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 239              	.LVL9:
 168:Src/main.c    **** }
 240              		.loc 1 168 0
 241 00a6 0022     		movs	r2, #0
 242 00a8 1146     		mov	r1, r2
 243 00aa 4FF0FF30 		mov	r0, #-1
 244 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 245              	.LVL10:
 169:Src/main.c    **** 
 246              		.loc 1 169 0
 247 00b2 15B0     		add	sp, sp, #84
 248              	.LCFI5:
 249              		.cfi_def_cfa_offset 4
 250              		@ sp needed
 251 00b4 5DF804FB 		ldr	pc, [sp], #4
 252              	.L12:
 253              		.align	2
 254              	.L11:
 255 00b8 00380240 		.word	1073887232
 256 00bc 00700040 		.word	1073770496
 257 00c0 00000000 		.word	.LC0
 258 00c4 D34D6210 		.word	274877907
 259              		.cfi_endproc
 260              	.LFE125:
 262              		.section	.text.main,"ax",%progbits
 263              		.align	2
 264              		.global	main
 265              		.thumb
 266              		.thumb_func
 268              	main:
 269              	.LFB124:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 270              		.loc 1 73 0
 271              		.cfi_startproc
 272              		@ Volatile: function does not return.
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 08B5     		push	{r3, lr}
 276              	.LCFI6:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 3, -8
 279              		.cfi_offset 14, -4
  81:Src/main.c    **** 
 280              		.loc 1 81 0
 281 0002 FFF7FEFF 		bl	HAL_Init
 282              	.LVL11:
  88:Src/main.c    **** 
ARM GAS  /tmp/ccRBECfh.s 			page 10


 283              		.loc 1 88 0
 284 0006 FFF7FEFF 		bl	SystemClock_Config
 285              	.LVL12:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 286              		.loc 1 95 0
 287 000a FFF7FEFF 		bl	MX_GPIO_Init
 288              	.LVL13:
 289              	.L14:
 290 000e FEE7     		b	.L14
 291              		.cfi_endproc
 292              	.LFE124:
 294              		.section	.rodata.str1.4,"aMS",%progbits,1
 295              		.align	2
 296              	.LC0:
 297 0000 5372632F 		.ascii	"Src/main.c\000"
 297      6D61696E 
 297      2E6300
 298              		.text
 299              	.Letext0:
 300              		.file 2 "/home/yur/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 301              		.file 3 "/home/yur/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 302              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 303              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 304              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 305              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 306              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 307              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 308              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 309              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccRBECfh.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccRBECfh.s:22     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccRBECfh.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccRBECfh.s:97     .text.MX_GPIO_Init:00000058 $d
     /tmp/ccRBECfh.s:103    .text._Error_Handler:00000000 $t
     /tmp/ccRBECfh.s:108    .text._Error_Handler:00000000 _Error_Handler
     /tmp/ccRBECfh.s:123    .text.SystemClock_Config:00000000 $t
     /tmp/ccRBECfh.s:128    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccRBECfh.s:255    .text.SystemClock_Config:000000b8 $d
     /tmp/ccRBECfh.s:263    .text.main:00000000 $t
     /tmp/ccRBECfh.s:268    .text.main:00000000 main
     /tmp/ccRBECfh.s:295    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
